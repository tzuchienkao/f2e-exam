{"remainingRequest":"/Users/tzuchien/Sites/stockfeel/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tzuchien/Sites/stockfeel/src/components/sortTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tzuchien/Sites/stockfeel/src/components/sortTable.vue","mtime":1565253755519},{"path":"/Users/tzuchien/Sites/stockfeel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tzuchien/Sites/stockfeel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/tzuchien/Sites/stockfeel/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tzuchien/Sites/stockfeel/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'sortTable',\n  props: ['isSpecial', 'sortType', 'sortCrease'],\n  data () {\n    return {\n      tableTitle: [\n        'ID',\n        '名稱',\n        '報酬率',\n        '特選商品',\n        '收盤價'\n      ],\n      originData: {},\n      newAllData: {}\n    }\n  },\n  watch: {\n    isSpecial () {\n      this.combineData();\n    },\n    sortType () {\n      this.combineData();\n    },\n    sortCrease () {\n      this.combineData();\n    }\n  },\n  computed: {\n    sortSpecial () {\n      return this.isSpecial;\n    },\n    sortByType () {\n      return this.sortType;\n    },\n    sortByCrease () {\n      return this.sortCrease;\n    }\n  },\n  methods: {\n    async initData () {\n      let res = await fetch('../data.json');\n      this.originData = await res.json();\n      this.combineData();\n      this.sortBy(this.sortByType);\n      return this.originData;\n    },\n    combineData () {\n      this.newAllData = JSON.parse(JSON.stringify(this.originData));\n      this.newAllData = this.newAllData.filter((ele) => {\n        if (!ele.specialStock) {\n          ele['specialStockText'] = '否'\n        } else {\n          ele['specialStockText'] = '是'\n        }\n        if (this.sortSpecial) {\n          return ele.specialStock === true;\n        } else {\n          return ele;\n        }\n      });\n      if (this.sortByType) {\n        this.newAllData = this.newAllData.sort((a, b) => {\n          let result = this.sortByCrease === 'decrease' ? b[this.sortType] - a[this.sortType] : a[this.sortType] - b[this.sortType]\n          return result\n        })\n      }\n    },\n    sortBy (type) {\n      console.log(type)\n      let sortType, sortCrease;\n      if (type) {\n        switch (type) {\n          case 'specialStock':\n            for (let i in this.newAllData) {\n              if (this.newAllData[i].specialStock === false) {\n                  this.newAllData.shift(this.newAllData[i]);\n              }\n            }\n            break;\n          case 'sortType':\n            sortType = this.sortByType;\n            break;\n          case 'sortCrease':\n            sortCrease = this.sortByCrease;\n            break;\n        }\n        this.newAllData.sort(function (a, b) {\n          let r_val = sortCrease === 'decrease' ? a - b : b - a;\n          return r_val;\n        })\n        console.log(this.newAllData)\n      }\n    }\n  },\n  mounted () {\n    this.initData();\n  }\n}\n",{"version":3,"sources":["sortTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"sortTable.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <section id=\"sortTable\">\n    <table>\n      <tbody>\n        <tr>\n          <td v-for=\"(title, index) in tableTitle\" :key=\"index\">\n            {{ title }}\n          </td>\n        </tr>\n        <tr v-for=\"data in newAllData\" :key=\"data.id\">\n          <td>\n            {{ data.id }}\n          </td>\n          <td>\n            {{ data.name }}\n          </td>\n          <td>\n            {{ data.reward }}\n          </td>\n          <td>\n            {{ data.specialStockText }}\n          </td>\n          <td>\n            {{ data.closePrice }}\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </section>\n</template>\n\n<script>\nexport default {\n  name: 'sortTable',\n  props: ['isSpecial', 'sortType', 'sortCrease'],\n  data () {\n    return {\n      tableTitle: [\n        'ID',\n        '名稱',\n        '報酬率',\n        '特選商品',\n        '收盤價'\n      ],\n      originData: {},\n      newAllData: {}\n    }\n  },\n  watch: {\n    isSpecial () {\n      this.combineData();\n    },\n    sortType () {\n      this.combineData();\n    },\n    sortCrease () {\n      this.combineData();\n    }\n  },\n  computed: {\n    sortSpecial () {\n      return this.isSpecial;\n    },\n    sortByType () {\n      return this.sortType;\n    },\n    sortByCrease () {\n      return this.sortCrease;\n    }\n  },\n  methods: {\n    async initData () {\n      let res = await fetch('../data.json');\n      this.originData = await res.json();\n      this.combineData();\n      this.sortBy(this.sortByType);\n      return this.originData;\n    },\n    combineData () {\n      this.newAllData = JSON.parse(JSON.stringify(this.originData));\n      this.newAllData = this.newAllData.filter((ele) => {\n        if (!ele.specialStock) {\n          ele['specialStockText'] = '否'\n        } else {\n          ele['specialStockText'] = '是'\n        }\n        if (this.sortSpecial) {\n          return ele.specialStock === true;\n        } else {\n          return ele;\n        }\n      });\n      if (this.sortByType) {\n        this.newAllData = this.newAllData.sort((a, b) => {\n          let result = this.sortByCrease === 'decrease' ? b[this.sortType] - a[this.sortType] : a[this.sortType] - b[this.sortType]\n          return result\n        })\n      }\n    },\n    sortBy (type) {\n      console.log(type)\n      let sortType, sortCrease;\n      if (type) {\n        switch (type) {\n          case 'specialStock':\n            for (let i in this.newAllData) {\n              if (this.newAllData[i].specialStock === false) {\n                  this.newAllData.shift(this.newAllData[i]);\n              }\n            }\n            break;\n          case 'sortType':\n            sortType = this.sortByType;\n            break;\n          case 'sortCrease':\n            sortCrease = this.sortByCrease;\n            break;\n        }\n        this.newAllData.sort(function (a, b) {\n          let r_val = sortCrease === 'decrease' ? a - b : b - a;\n          return r_val;\n        })\n        console.log(this.newAllData)\n      }\n    }\n  },\n  mounted () {\n    this.initData();\n  }\n}\n</script>\n\n<style scoped>\n#sortTable td {\n\n}\n</style>\n"]}]}